==Estrutura Sequencial

==Expressão aritmética
  -Operadores
    + Soma
    - Subtração
    * Multiplicação
    / Divisão inteira
    % Resto da divisão (mod)
  -Precedência
    -0º () - resolve o que estiver dentro dos parenteses 
    -1º *, / , %
    -2º +, -
  
==Variáveis
  -Variável - espaço de memória que armazena dados durante a execução do programa
    --sintaxe
      ---<tipo> <nome> = <valor inicial>;
      ---int idade = 25;
  -Uma variável possui:
    --Nome (identificador)
    --Tipo
    --Valor
    --Endereço
    
==Tipos primitivos
  -Numéricos inteiros
      TIPO        TAMANHO                 VALORES                                               VALOR PADRÃO
      byte        8 bits                  -128 a 127                                            0
      short       16 bits                 -32768 a 32767                                        0
      int         32 bits                 -2147483648 a 2147483647                              0
      long        64 bits                 -9223372036854770000 a 9223372036854770000            0L
  -Ponto flutuante
      float       32 bits                 -1,4024 ^ -37 a 3,4028 ^ + 38                         0.0f
      double      64 bits                 -494 ^ -307 a 1.79 ^ + 308                            0.0
  -Caractere unicode (um)
      char        16 bits                 '/u0000' a '/uFFFF'                                   '/u0000'
  -Booleano
      boolean     1 bit                   {false, true}                                         false
      
*Site - unicode-table.com
*String - cadeia de caracteres

==Nomes de variáveis
  -Começar com letra ou _ (underscore), não usar números
  -Não deve possuir espaços
  -Não usar acentos ou til
  -Usar padrão "Camel Case"
  
==Camel Case
  -CamelCase
    --Classe
      ---MinhaClasse (Classes ou Interfaces)
    --Atributo
      ---meuAtributo
    --Variável
      ---minhaVariavel
    --Método
      ---meuMétodo
    --Pacotes
      ---meupacote
    --Constante
      ---VALOR_DE_PI
      
==As 3 Operações básicas
  -Entrada
    --Leitura dos dados
  -Processamento
    --Cálculos (atricuição do resultado)
  -Saída
    --Informa o resultado, escrita de dados
    
==Saída de dados
  -Exibe um dado pelo dispositivo desaída 
  -System.out.print
  -System.out.println
    --exemplo primeiro programma (Main.java)

==Saída formatada (float)
  -System.out.printf("%.2f%n", x);
    --2 dígitos após a vírgula
  -System.out.printf("%.4f%n", x);
    --4 dígitos após a vírgula
    
*ponto (.) é o separador decimal  
import  java.util.Locale;(Início da página)
.
.
.
Locale.setDefault(Locale.US); (Corpo do código)
    
==Concatenação
  -Operado +
    --ex.:  System.out.println("RESULTADO = " + X + " METROS.");
  -Printf
    --Ex.:  System.out.printf("RESULTADO = %.2f metros%n" , x);
    --Ex.:  String nome = "Maria";
            int idade = 31;
            double renda = 4000.0;
            System.out.printf("%s tem %d anos e ganha R$ %.2f reais%n", nome, idade, renda);
            
==Exercício
  -Em um novo programa, inicie as seguintes variáveis:
    --String  product1 = "Computer";
    --String  product2 = "Office Desk";
    --int age = 30;
    --int code = 5290;
    --char  gender = 'F';
    --double  price1 = 2100.0;
    --double  price2 = 650.50;
    --double  measure = 53.234567;
  -Emseguida, usando os valores das variáveis, produza a seguinte saída:
    --Products:
    --Computer, which price is $ 2100,00
    --Officer desk, which price is $ 650,50
    --
    --Record: 30 yearsold, code 5290 and gender: F
    --
    --Measure which eight decimal places 53,23456700
    --Rounded (three decimal places): 53,235
    --US decimal point: 53.235        
    
==Processamneto de dados e Casting  
  -Comando de atribuição
    --<variável> = <expressão>;
    --x = 5;
    --y = 2 * x;
    
==Entrada de dados
  -leitura
  -Criar um objeto do tipo Scanner:
    --declarar o import do Scanner:
      -- import java.util.Scanner;
    -- Scanner sc = new Scanner(System.in);
        ---a variável sc é do tipo Scanner
        ---deves-e encerrar a variável sc, quando não mais necessária:
          ---- sc.close();
            

